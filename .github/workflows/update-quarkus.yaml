# GitHub action script to automate the migration to newer Quarkus versions

name: update-quarkus
on:
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:
jobs:
  update:
    runs-on: ubuntu-latest
    steps:

      - name: Check out repository
        uses: actions/checkout@v2
        
      - name: Authenticate GutHub CLI
        run: echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token

      - name: Set environment variables
        id: job-details
        run: |
          echo "QUARKUS_VERSION=$(gh release list --repo quarkusio/quarkus | grep ".Final" | awk '{print $1}' | sort -V | tail -1 )" >> $GITHUB_ENV
          
      - name: Gather Existing POM information
        id: quarkus-pom
        uses: jthambly/quarkus-pom-action@v1
        
      - name: Check for existing branches
        run: echo "BRANCHES_EXISTS=$(git ls-remote | grep q$QUARKUS_VERSION | wc -l)" >> $GITHUB_ENV
          
      - name: Determine if there is an upgrade available and it has not commenced
        if: env.CURRENT_VERSION != env.QUARKUS_VERSION && env.BRANCHES_EXISTS == 0
        env:
          CURRENT_VERSION: ${{ steps.quarkus-pom.outputs.current_version }}
        run: |
          echo "UPGRADE=true" >> $GITHUB_ENV
          
      - name: Create new branch for updated version
        if: env.UPGRADE
        run: git switch -c "q$QUARKUS_VERSION"

      - name: Generate latest base build
        if: env.UPGRADE
        env:
          CURRENT_VERSION: ${{ steps.quarkus-pom.outputs.current_version }}
          PROJECT_GROUP: ${{ steps.quarkus-pom.outputs.project_group }}
          PROJECT_NAME: ${{ steps.quarkus-pom.outputs.project_name }}
          QUARKUS_EXTENSIONS: ${{ steps.quarkus-pom.outputs.quarkus_extensions }}
        run: |
          mkdir base
          cd base
          mvn "io.quarkus:quarkus-maven-plugin:$QUARKUS_VERSION:create" \
            -DprojectGroupId="$PROJECT_GROUP" \
            -DprojectArtifactId="$PROJECT_NAME" \
            -Dextensions="$QUARKUS_EXTENSIONS"
      - name: Update file structure
        if: env.UPGRADE
        env:
          PROJECT_NAME: ${{ steps.quarkus-pom.outputs.project_name }}
          PROJECT_FILES: |
            .git/
            .github/
            src/main/java/
            src/main/resources/
            src/test/
            yaml/
            base/
            LICENCE
            #README
        run: echo "$PROJECT_FILES" | rsync -av --delete --exclude-from=- "base/$PROJECT_NAME/" "./"

      - name: Clean up base directory
        if: env.UPGRADE
        run: rm -r -f base/

      - name: Set author information
        if: env.UPGRADE
        run: |
          git config --global user.email "noreply@github.com"
          git config --global user.name "automated"
      - name: Commit changes
        if: env.UPGRADE
        run: git commit -am "Automated - Updated to Quarkus version $QUARKUS_VERSION"

      - name: Push upstream
        if: env.UPGRADE
        run: git push -u origin "q$QUARKUS_VERSION"
        
      - name: Generate documentation links
        if: env.UPGRADE
        run: |
          QUARKUS_VERSION_MAJOR_MINOR=$( echo $QUARKUS_VERSION | awk -F'.' '{print $1"."$2}' )
          echo "GIT_MSG<<EOE" >> $GITHUB_ENV
          echo "A new Quarkus version has been applied and is ready for review." >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "[Release Information - $QUARKUS_VERSION](https://github.com/quarkusio/quarkus/releases/tag/$QUARKUS_VERSION)" >> $GITHUB_ENV
          echo "[Migration Guide - $QUARKUS_VERSION](https://github.com/quarkusio/quarkus/wiki/Migration-Guide-$QUARKUS_VERSION_MAJOR_MINOR)" >> $GITHUB_ENV
          echo "EOE" >> $GITHUB_ENV
      - name: Create a pull request
        if: env.UPGRADE
        run: |
          gh pr create --title "Automated - Updated to Quarkus version $QUARKUS_VERSION" \
            --body "$GIT_MSG" \
            --assignee "$GITHUB_REPOSITORY_OWNER"
      - name: Add migration checklist
        if: env.UPGRADE
        env:
          GIT_MSG: |
            Migration Checklist:
            
            - [x] Reviewers and Assignees assigned
            - [x] Link to Migration Documentation provided
            - [ ] Migration Documentation reviewed
            - [ ] Migration changes reviewed
            - [ ] File modifications reviewed
            - [ ] Automated checks performed
            - [ ] Manual QA performed
        run: gh pr comment --body "$GIT_MSG"

      - name: Get a tree listing of directory contents
        if: env.UPGRADE
        run: tree .

      - name: List environment variables
        if: env.UPGRADE
        run: env